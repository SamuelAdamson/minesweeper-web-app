.cell {
  background-color: rgba(137, 148, 153, 0.8);
  border-radius: 0.2rem;
  transition: background-color ease 0.2s;
  display: flex;
  justify-content: center;
  align-items: center;

  /* Changes on small screen (see below) */
  margin: 0.15vmax;
}

.cellEasy {
  /* Cell mode easy */
  height: 3vmax;
  width: 3vmax;
}
.cellMedium {
  /* Cell mode easy */
  height: 2.5vmax;
  width: 2.5vmax;
}
.cellHard {
  /* Cell mode easy */
  height: 2vmax;
  width: 2vmax;
}

/*Cell Content Styling*/
.cell h3 {
  color: rgba(0, 0, 0, 0.8);
  margin: 0;
  padding: 0;
  font-size: 2.5vmin;
}
.cell.paused {
  pointer-events: none;
  cursor: default;
  background-color: rgb(0,0,0,0.3);
}
.cell.covered {
  filter: brightness(70%);
  cursor: pointer;
}
.cell.covered:hover {
  filter: brightness(35%);
}
.cell.covered.gameOver {
  pointer-events: none;
  cursor: default;
  background-color: rgba(137, 148, 153, 0.9);
}
.cell.uncovered {
  pointer-events: none;
  cursor: default;
}
.cell.uncovered.zero {
  background-color: rgba(137, 148, 153, 0.45);
}
.cell.uncovered.one {
  /* One Adjacent */
  background-color: rgba(154, 205, 50, 0.9);
}
.cell.uncovered.two {
  /* Two Adjacent */
  background-color: rgba(218, 175, 32, 0.9);
}
.cell.uncovered.three {
  /* Three Adjacent */
  background-color: rgba(255, 127, 80, 0.9);
}
.cell.uncovered.fourplus {
  /* Four or more Adjacent */
  background-color: rgba(255, 40, 50, 0.9);
}
.cell.mine {
  /* Cell is a mine */
  background-color: rgb(0, 0, 0);
  cursor: default;
}

.flag {
  /*Rotate inherit*/
  transform: inherit;
}

@media (max-width: 460px) {
  .cell {
    /*Rotate Grid*/
    transform: rotate(90deg);
    white-space: nowrap;
    
    /* New margin */
    margin: 0.22vmax;
  }

  .cellEasy {
    /* Cell mode easy -- small screen */
    height: 4vmax;
    width: 4vmax;
  }
  .cellMedium {
    /* Cell mode easy -- small screen */
    height: 3vmax;
    width: 3vmax;
  }
  .cellHard {
    /* Cell mode easy -- small screen */
    height: 4.5vmin;
    width: 4.5vmin;
  }
}
